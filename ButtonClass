import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.UIManager;

public class ButtonClass extends JButton
{	
	private static final Font smallFont = new Font("Verdana", Font.BOLD, 20);
	private static final Color numbersBgColor = new Color(48, 50, 52);
	private static final Color specialBgColor = new Color(175, 143, 233);
	//private static final Color borderColor = new Color(8, 2, 36);
	
	private float alphaValue;
	/* TODO
	 * Set different background colors depending on the button
	 * 
	*/


	public void setOpacity(float opacity) 
	{
		this.setBackground(
				new Color(
				(float)this.getBackground().getRed() / 255, 
				(float)this.getBackground().getGreen() / 255, 
				(float)this.getBackground().getBlue() / 255,
				opacity));
		
		MainClass.buttonPanel.repaint();
	}
	 
	ButtonClass(String text)
	{
		this.setText(text);
		this.setFont(ButtonClass.smallFont);
		UIManager.getDefaults().put("Button.disabledText",Color.WHITE);
		this.setEnabled(false);
		
		try
		{
			Integer.parseInt(text);
			
			this.setBackground(ButtonClass.numbersBgColor);
			alphaValue = 0.4f;
		}
		catch(Exception e)
		{
			if(text.equals("=") || text.equals("mode") || text.equals("deg") || text.equals("2nd"))
			{
				this.setBackground(new Color(255, 140, 0));//new Color(237, 171, 239)
				alphaValue = 0.8f;
			}
			else
			{
				this.setBackground(ButtonClass.specialBgColor);
				alphaValue = 0.3f;
			}
		}
		
		this.setOpacity(alphaValue);
		this.setBorder(BorderFactory.createLoweredBevelBorder()); //BorderFactory.createLineBorder(ButtonClass.borderColor)
		
		
		this.addMouseListener(new MouseAdapter() 
		{
		    public void mouseEntered(MouseEvent evt) 
		    {
		    	setBorder(BorderFactory.createLineBorder(Color.WHITE));
		    	setOpacity(alphaValue + 0.2f);
		    }

		    public void mouseExited(MouseEvent evt) 
		    {
		    	setBorder(BorderFactory.createLoweredBevelBorder());
		    	setOpacity(alphaValue);
		    }
		    
		    @Override
            public void mousePressed(MouseEvent arg0) {
                if (arg0.getButton() == MouseEvent.BUTTON1){
                	MainClass.updateForButtons(text);
                	
                	if(getText().equals("deg"))
                	{
                		setText("rad");
                		MainClass.buttonPanel.repaint();
                	}	
                	else if(getText().equals("rad"))
                	{
                		setText("deg");
                		MainClass.buttonPanel.repaint();
                	}
                	
                } else if (arg0.getButton() == MouseEvent.BUTTON2){
                    System.out.println("Middle button clicked");
                } else if (arg0.getButton() == MouseEvent.BUTTON3) {
                    System.out.println("Right button clicked");
                } 
            }
		});
	}
	
	public JComponent getButton()
	{
		return this;
	}
}
